<div class="flex justify-center items-center flex-col">
  <%!-- Drag and drop target --%>
  <section phx-drop-target={@uploads.post.ref}>
    <%= if @uploads.post.entries|> Enum.empty?() do %>
      <div class="max-w-xl">
        <label class="flex justify-center w-full h-32 px-4 mb-2 transition border-2 border-white border-dashed rounded-md appearance-none">
          <span class="flex items-center space-x-2">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="w-6 h-6 text-white"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
              stroke-width="2"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"
              />
            </svg>
            
            <p class="font-medium text-white">Drag and drop your .md file here</p>
          </span>
        </label>
      </div>
    <% end %>
     <%!-- Preview of uploaded file --%>
    <%= for entry <- @uploads.post.entries do %>
      <article class="text-white italic">
        <figure>
          <figcaption><%= entry.client_name %></figcaption>
        </figure>
         <%!-- entry.progress will update automatically for in-flight entries --%>
        <progress value={entry.progress} max="100"><%= entry.progress %>%</progress>
        <%!-- a regular click event whose handler will invoke Phoenix.LiveView.cancel_upload/3 --%>
        <button
          type="button"
          phx-click="cancel-upload"
          phx-value-ref={entry.ref}
          aria-label="cancel"
        >
          &times;
        </button>
         <%!-- Phoenix.Component.upload_errors/2 returns a list of error atoms --%>
        <%= for err <- upload_errors(@uploads.post, entry) do %>
          <p class="alert alert-danger"><%= error_to_string(err) %></p>
        <% end %>
      </article>
    <% end %>
     <%!-- Phoenix.Component.upload_errors/1 returns a list of error atoms --%>
    <%= for err <- upload_errors(@uploads.post) do %>
      <p class="alert alert-danger"><%= error_to_string(err) %></p>
    <% end %>
  </section>
   <%!-- Create post button (via upload file) --%>
  <div class="text-white italic">
    <.form for={@upload_form} id="upload-form" phx-submit="create_post" phx-change="validate">
      <.live_file_input upload={@uploads.post} />
      <%= if !Enum.empty?(@uploads.post.entries) do %>
        <div class="my-2">
          <.button type="submit">Upload</.button>
        </div>
      <% end %>
    </.form>
  </div>
   <%!-- Divider between create post via upload file and via form --%>
  <div class="flex w-full items-center text-center text-slate-300 italic my-5">
    <span class="border-slate-300 border-b flex-1"></span> <span class="mx-2">Or </span>
    <span class="border-slate-300 border-b flex-1"></span>
  </div>
  
  <h1 class="flex justify-center font-bold text-xl text-white">Create post</h1>
   <%!-- Form --%>
  <.form
    for={@new_post_form}
    phx-submit="create_post"
    class="create-post-inputs my-2 flex flex-col justify-center w-full max-w-sm"
  >
    <.input type="text" field={@new_post_form[:title]} placeholder="Title" required></.input>
    
    <.input type="text" field={@new_post_form[:author]} placeholder="Author" required></.input>
    
    <.input type="text" field={@new_post_form[:tags]} placeholder="Tags i.e. 'tag1 tag2'">
    </.input>
    
    <.input type="text" field={@new_post_form[:description]} placeholder="Description" required>
    </.input>
    
    <.input
      id="image-upload"
      phx-hook="DragDrop"
      type="textarea"
      field={@new_post_form[:body]}
      placeholder="Body"
      required
    >
    </.input>
    
    <div class="justify-center items-center flex my-2">
      <.button type="submit" class="bg-blue-500">Post</.button>
    </div>
  </.form>
</div>
